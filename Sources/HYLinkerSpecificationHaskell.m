//
//  HYLinkerSpecificationHaskell.m
//  HaskellPlugin
//
//  Created by Lyndon Tremblay on 25/12/06.
//  Copyright 2006 Lyndon Tremblay. All rights reserved.
//

#import "HYLinkerSpecificationHaskell.h"

#import "XCPBuildSystem.h"
#import "XCPDependencyGraph.h"

@implementation HYLinkerSpecificationHaskell

- (NSArray*) computeDependenciesForFilePaths: (NSArray*)inputs
	outputPath:(NSString*)output
	inTargetBuildContext:(PBXTargetBuildContext*)context
{
	output = [context expandedValueForString: output];

	XCDependencyNode* outputNode = [context dependencyNodeForName: output
		createIfNeeded: YES];
	XCDependencyCommand* dep = [context createCommandWithRuleInfo:
		[NSArray arrayWithObjects: @"HaskellLink", [context naturalPathForPath: output], nil]
		commandPath: [context expandedValueForString: [self path]]
		arguments: nil
		forNode: outputNode];
	[dep setToolSpecification: self];
	[dep addArgumentsFromArray:
		[self commandLineForAutogeneratedOptionsInTargetBuildContext: context]];
	[dep addArgument: @"-o"];
	[dep addArgument: output];

	//[dep addArgument: @"-ffi"];
	[dep addArgument: @"-threaded"];
	[dep addArgument: @"+RTS"];
	[dep addArgument: @"-N2"];
	[dep addArgument: @"-RTS"];

	[dep addArgument: @"-package"];
	[dep addArgument: @"OpenGL"];
	[dep addArgument: @"-package"];
	[dep addArgument: @"base"];
	[dep addArgument: @"-package"];
	[dep addArgument: @"mtl"];
	[dep addArgument: @"-framework"];
	[dep addArgument: @"AppKit"];
	[dep addArgument: @"-lode"];

//	[dep addArgument: @"-optl"];
//	[dep addArgument: @"\"-arch i386\""];
//	[dep addArgument: @"-optl"];
//	[dep addArgument: @"\"-arch ppc\""];

	//[dep addArgument: @"-dynamic"];
	[dep addArgument: @"-no-link-chk"];

//	PBXFileType* objectType = (PBXFileType*)[PBXFileType specificationForIdentifier: @"compiled.mach-o.objfile"];
//	PBXFileType* libraryType = 

#if 0
	NSEnumerator* libEnum = [[context linkedLibraryPaths] objectEnumerator];
	NSString* library;
	while ((library = [libEnum nextObject]) != nil)
	{
		library = [context expandedValueForString: library];

		PBXFileType* type = [PBXFileType fileTypeForFileName: [library lastPathComponent]];
		if (//[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"compiled.haskell.objfile"]] ||
			[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"compiled.mach-o.objfile"]] ||
			[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"archive.ar"]])
		{
			XCDependencyNode* libraryNode = [context dependencyNodeForName: library createIfNeeded: YES];
			[outputNode addDependedNode: libraryNode];
			[dep addArgument: library];
		}
		else
		{
			[context addDependencyAnalysisWarningMessageFormat:
				@"warning: skipping file `%@' (unexpected file type `%@' in Frameworks & Libraries)",
				library, [type identifier]];
		}
	}
#endif

	//NSLog(@"inputs = %@", inputs);
	NSEnumerator* objEnum = [inputs objectEnumerator];
	NSString* input;
	while ((input = [objEnum nextObject]) != nil)
	{
		input = [context expandedValueForString: input];
		PBXFileType* type = [PBXFileType fileTypeForFileName: [input lastPathComponent]];
		
		if (//[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"compiled.haskell.objfile"]] ||
			[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"compiled.mach-o.objfile"]] ||
			[type isKindOfSpecification: [PBXFileType specificationForIdentifier: @"archive.ar"]])
		{
			XCDependencyNode* inputNode = [context dependencyNodeForName: input createIfNeeded: YES];
			[outputNode addDependedNode: inputNode];
			[dep addArgument: input];
		}
		else
		{
			[context addDependencyAnalysisWarningMessageFormat:
				@"warning: skipping file `%@' (unexpected file type `%@' in link phase)", input, [type identifier]];
		}
	}

	return [NSArray arrayWithObject: outputNode];
}

@end
