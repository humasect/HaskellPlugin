//
//  HYCompilerSpecificationHaskell.m
//  HaskellPlugin
//
//  Created by Lyndon Tremblay on 25/12/06.
//  Copyright 2006 Hoovy Studios. All rights reserved.
//

#import "HYCompilerSpecificationHaskell.h"

#import "XCPBuildSystem.h"
#import "XCPDependencyGraph.h"
#import "XCPSupport.h"

@implementation HYCompilerSpecificationHaskell

+ (void)initialize
{
	PBXFileType* type = (PBXFileType*)[PBXFileType specificationForIdentifier: @"sourcecode.haskell"];
	XCCompilerSpecification* spec = (XCCompilerSpecification*)[XCCompilerSpecification specificationForIdentifier: @"org.glasgow.haskell.compiler"];
	[PBXTargetBuildContext activateImportedFileType: type withCompiler: spec];
}

- (NSArray *)computeDependenciesForInputFile:(NSString *)input
	ofType:(PBXFileType *)type
	variant:(NSString *)variant
	architecture:(NSString *)arch
	outputDirectory:(NSString *)outputDir
	inTargetBuildContext:(PBXTargetBuildContext *)context
{
	input = [context expandedValueForString: input];
	
//	BOOL isLiteral = [[input pathExtension] isEqualToString: @"lhs"];
//	BOOL isC = [[input pathExtension] isEqualToString: @"hsc"];
	NSString *baseName = [[input lastPathComponent] stringByDeletingPathExtension];
	NSString *output = [outputDir stringByAppendingPathComponent:
		[baseName stringByAppendingPathExtension: @"o"]];
	output = [context expandedValueForString: output];
//	NSString *interface = [outputDir stringByAppendingPathComponent:
//		[baseName stringByAppendingPathExtension: @"hi"]];
//	interface = [context expandedValueForString: interface];

	XCDependencyNode* outputNode = [context dependencyNodeForName: output createIfNeeded: YES];
	XCDependencyNode* inputNode = [context dependencyNodeForName: input createIfNeeded: YES];
	//XCDependencyNode* interfaceNode = [context dependencyNodeForName: interface createIfNeeded: YES];

	NSMutableArray *result = [NSMutableArray arrayWithCapacity: 2];
	[result addObject: outputNode];
	//[result addObject: interfaceNode];

	XCDependencyCommand* dep = [context
		createCommandWithRuleInfo: [NSArray arrayWithObjects: @"HaskellCompile",
			[context naturalPathForPath: input], nil]
		commandPath: [context expandedValueForString: [self path]]
		arguments: nil
		forNode: outputNode];
	[dep setToolSpecification: self];
	[dep addArgumentsFromArray:
		[self commandLineForAutogeneratedOptionsInTargetBuildContext: context]];
	[dep addArgumentsFromArray: [[context expandedValueForString:
		@"$(build_file_compiler_flags)"] arrayByParsingAsStringList]];
	//NSLog(@"%@", [self commandLineForAutogeneratedOptionsForKey: @"GHC_THREADED" inTargetBuildContext: context]);
	[dep addArgument: @"-c"];
	[dep addArgument: input];
	[dep addArgument: @"-odir"];
	[dep addArgument: [context expandedValueForString: outputDir]]; //[output stringByAppendingString: @".o"]];

	[dep addArgument: @"-iSource"];
	//[dep addArgument: @"-ffi"];
	[dep addArgument: @"-threaded"];
	[dep addArgument: @"+RTS"];
	[dep addArgument: @"-N2"];
	[dep addArgument: @"-RTS"];

	[dep addArgument: @"-package"];
	[dep addArgument: @"OpenGL"];
	[dep addArgument: @"-package"];
	[dep addArgument: @"base"];
	[dep addArgument: @"-package"];
	[dep addArgument: @"mtl"];
	[dep addArgument: @"-framework"];
	[dep addArgument: @"AppKit"];

//	[dep addArgument: @"-optc"];
//	[dep addArgument: @"\"-arch i386\""];
//	[dep addArgument: @"-optc"];
//	[dep addArgument: @"\"-arch ppc\""];

	[dep addOutputNode: outputNode];
	[outputNode addDependedNode: inputNode];
	//[interfaceNode addDependedNode: interfaceNode];

	[context setCompiledFilePath: output forSourceFilePath: input];
	
	//NSString* object_files_variant_arch = [context expandedValueForString: @"object_files"];
	//[context appendStringOrStringListValue: output toDynamicSetting: object_files_variant_arch];

	return result;
}

//- (NSArray*)importedFilesForPath:(NSString*)path
//	ensureFilesExist:(BOOL)ensure
//	inTargetBuildContext:(PBXTargetBuildContext*)context
//{
//	NSString* outputDir = [context expandedValueForString: @"$(OBJFILES_DIR_$(variant))/$(arch)"];
//	XCDependencyNode* inputNode = [context dependencyNodeForName: path createIfNeeded: YES];
//	NSMutableArray* imported = [NSMutableArray arrayWithCapacity: 10];
//
//	NSLog(@"importedF = %@ %@", path, ensure);
//
//	return imported;
//}

- (XCPropertyDomainSpecification*) specificationToShowInUserInterface
{
	XCPropertyDomainSpecification* spec = [[XCPropertyDomainSpecification specificationRegistry] objectForKey:@"org.glasgow.haskell.buildsettings.compiler-linker"];
	return (XCPropertyDomainSpecification*)[spec loadedSpecification];
}

@end
